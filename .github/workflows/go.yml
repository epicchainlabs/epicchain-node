name: epicchain-node tests

on:
  push:
    branches:
      - master
      - support/**
    paths-ignore:
      - '*.md'
  pull_request:
    branches:
      - master
      - support/**
    paths-ignore:
      - '*.md'

jobs:
  cover:
    name: Coverage
    runs-on: ubuntu-latest
    steps:
      - name: Setup go
        uses: actions/setup-go@v5
        with:
          cache: true
          go-version: '1.22'

      - name: Check out code
        uses: actions/checkout@v4

      - name: Run go test
        run: go test -coverprofile=coverage.txt -covermode=atomic ./...

      - name: Codecov
        uses: codecov/codecov-action@v4
        with:
          fail_ci_if_error: true # if something is wrong on uploading codecov results, then this job will fail
          files: ./coverage.txt
          slug: nspcc-dev/epicchain-node
          token: ${{ secrets.CODECOV_TOKEN }}
          verbose: true

  test:
    runs-on: ubuntu-latest
    name: Unit tests
    strategy:
      matrix:
        os: [ubuntu-22.04, macos-14]
        go: [ '1.20.x', '1.21.x', '1.22' ]
        exclude:
          # Only the latest Go version MacOS.
          - os: macos-14
            go: '1.20.x'
          - os: macos-14
            go: '1.21.x'
          # Exclude the latest Go version for Ubuntu as Coverage uses it.
          - os: ubuntu-22.04
            go: '1.22'

    steps:
      - name: Setup go
        uses: actions/setup-go@v5
        with:
          cache: true
          go-version: ${{ matrix.go }}

      - name: Check out code
        uses: actions/checkout@v4

      - name: Run go test
        run: go test -race ./...

  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version-file: 'go.mod'
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v4
        with:
          version: latest
          args: --timeout=5m
